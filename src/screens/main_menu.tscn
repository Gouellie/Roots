[gd_scene load_steps=41 format=2]

[ext_resource path="res://assets/plants/tropical_tree_sprite_sheet_3x3.png" type="Texture" id=1]
[ext_resource path="res://src/screens/main_menu.gd" type="Script" id=2]
[ext_resource path="res://assets/theme/main_theme.tres" type="Theme" id=3]
[ext_resource path="res://assets/theme/fonts/RubikDirt-Regular.ttf" type="DynamicFontData" id=4]
[ext_resource path="res://src/scenes/terrain_moderate_2.tscn" type="PackedScene" id=5]
[ext_resource path="res://assets/shaders/wind_sway_shader.tres" type="Material" id=6]
[ext_resource path="res://icon_monochrome_dark.png" type="Texture" id=7]
[ext_resource path="res://assets/plants/arrid_plant_sprite_sheet.png" type="Texture" id=8]
[ext_resource path="res://assets/plants/arrid_tree_sprite_sheet.png" type="Texture" id=9]
[ext_resource path="res://assets/tiles/bunnies_sprite_sheet.png" type="Texture" id=10]

[sub_resource type="AtlasTexture" id=6]
atlas = ExtResource( 10 )
region = Rect2( 0, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=7]
atlas = ExtResource( 10 )
region = Rect2( 192, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=8]
atlas = ExtResource( 10 )
region = Rect2( 384, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=9]
atlas = ExtResource( 10 )
region = Rect2( 576, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=10]
atlas = ExtResource( 10 )
region = Rect2( 768, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=11]
atlas = ExtResource( 10 )
region = Rect2( 960, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=12]
atlas = ExtResource( 10 )
region = Rect2( 1152, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=13]
atlas = ExtResource( 10 )
region = Rect2( 1344, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=14]
atlas = ExtResource( 10 )
region = Rect2( 1536, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=15]
atlas = ExtResource( 10 )
region = Rect2( 1728, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=16]
atlas = ExtResource( 10 )
region = Rect2( 1920, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=17]
atlas = ExtResource( 10 )
region = Rect2( 2112, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=18]
atlas = ExtResource( 10 )
region = Rect2( 2304, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=19]
atlas = ExtResource( 10 )
region = Rect2( 2496, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=20]
atlas = ExtResource( 10 )
region = Rect2( 2688, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=21]
atlas = ExtResource( 10 )
region = Rect2( 2880, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=22]
atlas = ExtResource( 10 )
region = Rect2( 3072, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=23]
atlas = ExtResource( 10 )
region = Rect2( 3264, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=24]
atlas = ExtResource( 10 )
region = Rect2( 3456, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=25]
atlas = ExtResource( 10 )
region = Rect2( 3648, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=26]
atlas = ExtResource( 10 )
region = Rect2( 3840, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=27]
atlas = ExtResource( 10 )
region = Rect2( 4032, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=28]
atlas = ExtResource( 10 )
region = Rect2( 4224, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=29]
atlas = ExtResource( 10 )
region = Rect2( 4416, 0, 192, 192 )

[sub_resource type="AtlasTexture" id=30]
atlas = ExtResource( 10 )
region = Rect2( 4608, 0, 192, 192 )

[sub_resource type="SpriteFrames" id=31]
animations = [ {
"frames": [ SubResource( 6 ), SubResource( 7 ), SubResource( 8 ), SubResource( 9 ), SubResource( 10 ), SubResource( 11 ), SubResource( 12 ), SubResource( 13 ), SubResource( 14 ), SubResource( 15 ), SubResource( 16 ), SubResource( 17 ), SubResource( 18 ), SubResource( 19 ), SubResource( 20 ), SubResource( 21 ), SubResource( 22 ), SubResource( 23 ), SubResource( 24 ), SubResource( 25 ), SubResource( 26 ), SubResource( 27 ), SubResource( 28 ), SubResource( 29 ), SubResource( 30 ) ],
"loop": true,
"name": "default",
"speed": 24.0
} ]

[sub_resource type="DynamicFont" id=1]
size = 31
font_data = ExtResource( 4 )

[sub_resource type="DynamicFont" id=2]
size = 120
font_data = ExtResource( 4 )

[sub_resource type="Shader" id=5]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/god-rays

Feel free to use, improve and change this shader according to your needs
and consider sharing the modified result on godotshaders.com.
*/

shader_type canvas_item;

uniform float angle = -0.3;
uniform float position = -0.2;
uniform float spread : hint_range(0.0, 1.0) = 0.5;
uniform float cutoff : hint_range(-1.0, 1.0) = 0.1;
uniform float falloff : hint_range(0.0, 1.0) = 0.2;
uniform float edge_fade : hint_range(0.0, 1.0) = 0.15;

uniform float speed = 1.0;
uniform float ray1_density = 8.0;
uniform float ray2_density = 30.0;
uniform float ray2_intensity : hint_range(0.0, 1.0) = 0.3;

uniform vec4 color : hint_color = vec4(1.0, 0.9, 0.65, 0.8);

uniform bool hdr = false;
uniform float seed = 5.0;

// Random and noise functions from Book of Shader's chapter on Noise.
float random(vec2 _uv) {
    return fract(sin(dot(_uv.xy,
                         vec2(12.9898, 78.233))) *
        43758.5453123);
}

float noise (in vec2 uv) {
    vec2 i = floor(uv);
    vec2 f = fract(uv);

    // Four corners in 2D of a tile
    float a = random(i);
    float b = random(i + vec2(1.0, 0.0));
    float c = random(i + vec2(0.0, 1.0));
    float d = random(i + vec2(1.0, 1.0));


    // Smooth Interpolation

    // Cubic Hermine Curve. Same as SmoothStep()
    vec2 u = f * f * (3.0-2.0 * f);

    // Mix 4 coorners percentages
    return mix(a, b, u.x) +
            (c - a)* u.y * (1.0 - u.x) +
            (d - b) * u.x * u.y;
}

mat2 rotate(float _angle){
    return mat2(vec2(cos(_angle), -sin(_angle)),
                vec2(sin(_angle), cos(_angle)));
}

vec4 screen(vec4 base, vec4 blend){
	return 1.0 - (1.0 - base) * (1.0 - blend);
}

void fragment()
{
	
	// Rotate, skew and move the UVs
	vec2 transformed_uv = ( rotate(angle) * (UV - position) )  / ( (UV.y + spread) - (UV.y * spread) );
	
	// Animate the ray according the the new transformed UVs
	vec2 ray1 = vec2(transformed_uv.x * ray1_density + sin(TIME * 0.1 * speed) * (ray1_density * 0.2) + seed, 1.0);
	vec2 ray2 = vec2(transformed_uv.x * ray2_density + sin(TIME * 0.2 * speed) * (ray1_density * 0.2) + seed, 1.0);
	
	// Cut off the ray's edges
	float cut = step(cutoff, transformed_uv.x) * step(cutoff, 1.0 - transformed_uv.x);
	ray1 *= cut;
	ray2 *= cut;
	
	// Apply the noise pattern (i.e. create the rays)
	float rays;
	
	if (hdr){
		// This is not really HDR, but check this to not clamp the two merged rays making 
		// their values go over 1.0. Can make for some nice effect
		rays = noise(ray1) + (noise(ray2) * ray2_intensity);
	}
	else{
		 rays = clamp(noise(ray1) + (noise(ray2) * ray2_intensity), 0., 1.);
	}
	
	// Fade out edges
	rays *= smoothstep(0.0, falloff, (1.0 - UV.y)); // Bottom
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, transformed_uv.x); // Left
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, 1.0 - transformed_uv.x); // Right
	
	// Color to the rays
	vec3 shine = vec3(rays) * color.rgb;

	// Try different blending modes for a nicer effect. \"Screen\" is included in the code,
	// but take a look at https://godotshaders.com/snippet/blending-modes/ for more.
	// With \"Screen\" blend mode:
	shine = screen(texture(SCREEN_TEXTURE, SCREEN_UV), vec4(color)).rgb;
	
	COLOR = vec4(shine, rays * color.a);
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 5 )
shader_param/angle = -0.3
shader_param/position = -0.2
shader_param/spread = 0.5
shader_param/cutoff = 0.1
shader_param/falloff = 0.2
shader_param/edge_fade = 0.15
shader_param/speed = 1.0
shader_param/ray1_density = 8.0
shader_param/ray2_density = 30.0
shader_param/ray2_intensity = 0.3
shader_param/color = Color( 1, 0.9, 0.65, 0.8 )
shader_param/hdr = false
shader_param/seed = 5.0

[node name="MainMenu" type="CanvasLayer"]
script = ExtResource( 2 )

[node name="ColorRect_Background" type="ColorRect" parent="."]
margin_right = 1280.0
margin_bottom = 712.0
color = Color( 0.25098, 0.396078, 0.407843, 1 )

[node name="IconMonochromeDark" type="Sprite" parent="."]
modulate = Color( 1, 1, 1, 0.0156863 )
position = Vector2( 256, 136 )
scale = Vector2( 0.5, 0.5 )
texture = ExtResource( 7 )

[node name="Terrain" parent="." instance=ExtResource( 5 )]
modulate = Color( 0.286275, 0.207843, 0.207843, 1 )
position = Vector2( -320, 144 )

[node name="Sprite_Main" type="Sprite" parent="."]
material = ExtResource( 6 )
position = Vector2( 640, 304 )
texture = ExtResource( 1 )
hframes = 20

[node name="AnimatedSprite_Bunny" type="AnimatedSprite" parent="."]
position = Vector2( 704, 304 )
frames = SubResource( 31 )
frame = 9
playing = true

[node name="Sprite_Cactus" type="Sprite" parent="."]
modulate = Color( 0.117647, 0.0745098, 0.0745098, 1 )
material = ExtResource( 6 )
position = Vector2( 928, 176 )
texture = ExtResource( 8 )
region_enabled = true
region_rect = Rect2( 0, 0, 192, 192 )

[node name="Sprite_Balboa" type="Sprite" parent="."]
modulate = Color( 0.117647, 0.0745098, 0.0745098, 1 )
material = ExtResource( 6 )
position = Vector2( 224, 248 )
texture = ExtResource( 9 )
region_enabled = true
region_rect = Rect2( 0, 0, 192, 192 )

[node name="CenterContainer" type="CenterContainer" parent="."]
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -368.0

[node name="VBoxContainer" type="VBoxContainer" parent="CenterContainer"]
margin_left = 565.0
margin_top = 139.0
margin_right = 715.0
margin_bottom = 229.0
rect_min_size = Vector2( 150, 90 )

[node name="Button_NewGame" type="Button" parent="CenterContainer/VBoxContainer"]
margin_right = 150.0
margin_bottom = 50.0
rect_min_size = Vector2( 150, 50 )
theme = ExtResource( 3 )
custom_fonts/font = SubResource( 1 )
text = "PLAY"

[node name="Button_Quit" type="Button" parent="CenterContainer/VBoxContainer"]
margin_top = 54.0
margin_right = 150.0
margin_bottom = 88.0
rect_min_size = Vector2( 143, 0 )
theme = ExtResource( 3 )
text = "QUIT"

[node name="Label" type="Label" parent="."]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -473.0
margin_top = -71.5
margin_right = 369.0
margin_bottom = 71.5
custom_fonts/font = SubResource( 2 )
text = "tHrIVE_MIND"

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 4 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -264.0
margin_top = -480.0
margin_right = 160.0
margin_bottom = 64.0

[connection signal="pressed" from="CenterContainer/VBoxContainer/Button_NewGame" to="." method="_on_Button_NewGame_pressed"]
[connection signal="pressed" from="CenterContainer/VBoxContainer/Button_Quit" to="." method="_on_Button_Quit_pressed"]
